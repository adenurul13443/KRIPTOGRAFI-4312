# -*- coding: utf-8 -*-
"""coba-kripto.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ol-JJLPz-JCWTtnmnfluhCl1PgJ3-wqN
"""
pip install pycipher
import streamlit as st

st.title("KRIPTOGRAFI")
from pycipher import Vigenere
a = Vigenere ('POLKE').encipher('DIANNUSWANTORO')
print(a)

from pycipher import Beaufort
a = Beaufort ('POLKE').encipher('DIANNUSWANTORO')
print(a)

from pycipher import Autokey
a = Autokey ('POLKE').encipher('DIANNUSWANTORO')
print(a)

def encrypt_text(plaintext,n):
    ans = ""
    # iterate over the given text
    for i in range(len(plaintext)):
        ch = plaintext[i]

        # check if space is there then simply add space
        if ch==" ":
            ans+=" "
        # check if a character is uppercase then encrypt it accordingly
        elif (ch.isupper()):
            ans += chr((ord(ch) + n-65) % 26 + 65)
        # check if a character is lowercase then encrypt it accordingly

        else:
            ans += chr((ord(ch) + n-97) % 26 + 97)

    return ans

plaintext = "HELLO EVERYONE"
n = 1
print("Plain Text is : " + plaintext)
print("Shift pattern is : " + str(n))
print("Cipher Text is : " + encrypt_text(plaintext,n))



from pycipher import Vigenere
plain_text=input("Enter the message: ")
key=input("Enter the key: ")
vigenere_cipher = Vigenere (key).encipher(plain_text)
print("---VIGENERE CIPHER---")
print("CIPHER TEXT : ",vigenere_cipher)

from pycipher import Beaufort
beaufort_cipher = Beaufort (key).encipher(plain_text)
print("---BEAUFORT CIPHER---")
print("CIPHER TEXT : ",beaufort_cipher)

import string

main=string.ascii_lowercase

def conversion(plain_text,key):
    index=0
    cipher_text=""

    # convert into lower case
    plain_text=plain_text.lower()
    key=key.lower()

    # For generating key, the given keyword is repeated
    # in a circular manner until it matches the length of
    # the plain text.
    for c in plain_text:
        if c in main:
            # to get the number corresponding to the alphabet
            off=ord(key[index])-ord('a')

            # implementing algo logic here
            encrypt_num=(ord(c)-ord('a')+off)%26
            encrypt=chr(encrypt_num+ord('a'))

            # adding into cipher text to get the encrypted message
            cipher_text+=encrypt

            # for cyclic rotation in generating key from keyword
            index=(index+1)%len(key)
        # to not to change spaces or any other special
        # characters in their positions
        else:
            cipher_text+=c

    print("plain text: ",plain_text)
    print("cipher text: ",cipher_text)

plain_text=input("Enter the message: ")
key=input("Enter the key: ")

# calling function
conversion(plain_text,key)

"""Coba Bikin Menu"""

while True:
    print("Silahkan Pilih Algoritma Berikut:")
    print("1. Vigenere Cipher")
    print("2. Beaufort Cipher")
    print("3. Autokey Cipher")
    print("4. Exit")
    ch = input("Masukkan pilihan Anda: ")

    if ch == "1":
        print("---VIGENERE CIPHER---")
        from pycipher import Vigenere
        plain_text=input("Enter the message: ")
        key=input("Enter the key: ")
        vigenere_cipher = Vigenere (key).encipher(plain_text)
        print("CIPHER TEXT : ",vigenere_cipher)
        print("\n")

    elif ch == "2":
        print("---BEAUFORT CIPHER---")
        from pycipher import Beaufort
        plain_text=input("Enter the message: ")
        key=input("Enter the key: ")
        beaufort_cipher = Beaufort (key).encipher(plain_text)
        print("CIPHER TEXT : ",beaufort_cipher)
        print("\n")

    elif ch == "3":
        print("---AUTOKEY CIPHER---")
        from pycipher import Autokey
        plain_text=input("Enter the message: ")
        key=input("Enter the key: ")
        autokey_cipher = Autokey (key).encipher(plain_text)
        print("CIPHER TEXT : ",autokey_cipher)
        print("\n")

    elif ch == "4":
        print("Keluar dari Program")
        break
    else:
        print("Pilihan tidak valid")
